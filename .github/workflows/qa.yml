name: 'Quality assurance'

on:
    workflow_dispatch: {}
    pull_request: ~
    push:
        branches:
            - '3.x'

env:
    COMPOSER_NO_INTERACTION: '1'
    COMPOSER_MEMORY_LIMIT: '-1'
    COMPOSER_DISABLE_XDEBUG_WARN: '1'
    COMPOSER_CACHE_DIR: '/home/runner/.cache/composer'

jobs:
    build:
        name: 'Build'
        runs-on: 'ubuntu-latest'
        steps:
            -
                name: 'Set up PHP'
                uses: 'shivammathur/setup-php@2.24.0'
                with:
                    php-version: '8.1'
                    coverage: 'none'
                    tools: 'pecl'
                    extensions: 'redis, memcached, mongodb, apcu'
            -
                name: 'Checkout code'
                uses: 'actions/checkout@v3'
            -
                name: 'Composer update - cache restore'
                uses: 'actions/cache@v3'
                with:
                    key: "composer-${{ hashFiles('composer.json') }}"
                    path: |
                        /home/runner/.cache/composer
            -
                name: 'Composer update - run'
                run: 'composer update'
    lint:
        name: 'Lint'
        needs:
            - 'build'
        runs-on: 'ubuntu-latest'

        steps:
            -
                name: 'Set up PHP'
                uses: 'shivammathur/setup-php@2.24.0'
                with:
                    php-version: '8.1'
                    coverage: 'none'
                    tools: 'pecl'
                    extensions: 'redis, memcached, mongodb, apcu'
            -
                name: 'Checkout code'
                uses: 'actions/checkout@v3'
            -
                name: 'Composer update - cache restore'
                uses: 'actions/cache@v3'
                with:
                    key: "composer-${{ hashFiles('composer.json') }}"
                    path: |
                        /home/runner/.cache/composer
            -
                name: 'Composer update - run'
                run: 'composer update'
            -
                name: 'Lint - Composer normalize'
                run: 'composer run lint:composer-normalize'
            -
                name: 'Lint - PHPCS'
                run: 'composer run lint:phpcs'
            -
                name: 'Lint - PHPStan'
                run: 'composer run lint:phpstan'
            -
                name: 'Lint - psalm'
                run: 'composer run lint:psalm'
    test:
        name: 'Test'
        needs:
            - 'build'
        runs-on: 'ubuntu-latest'
        strategy:
            fail-fast: false
            matrix:
                php:
                    - '8.1'
                    - '8.2'
        services:
            redis:
                image: 'redis:6.0.11'
                ports:
                    - '6379:6379'
            redis-cluster:
                image: 'grokzen/redis-cluster:6.0.11'
                ports:
                    - '7000:7000'
                    - '7001:7001'
                    - '7002:7002'
                env:
                    STANDALONE: 1
            memcached:
                image: 'memcached:1.6.19'
                ports:
                    - '11211:11211'
            mongodb:
                image: 'mongo:6.0.5'
                ports:
                    - '27017:27017'
        steps:
            -
                name: 'Set up PHP'
                uses: 'shivammathur/setup-php@2.24.0'
                with:
                    php-version: '${{ matrix.php }}'
                    coverage: 'xdebug'
                    tools: 'pecl'
                    extensions: 'redis, memcached, mongodb, apcu'
                    ini-values: 'apc.enable_cli=On'
            -
                name: 'Git checkout'
                uses: 'actions/checkout@v3'
            -
                name: 'Composer update - cache restore'
                uses: 'actions/cache@v3'
                with:
                    key: "composer-${{ hashFiles('composer.json') }}"
                    path: |
                        /home/runner/.cache/composer
            -
                name: 'Composer update - run'
                run: 'composer update'
            -
                name: 'Test - phpunit'
                run: './vendor/bin/phpunit'
